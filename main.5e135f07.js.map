{"version":3,"sources":["scripts/main.js"],"names":["list","document","getElementsByTagName","getEmployees","listProperty","employees","employee","push","name","innerText","position","dataset","salary","age","sortList","sort","a","b","convertToNum","i","length","string","slice","replace"],"mappings":";AAAA,aAoCC,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAlCD,IAAMA,EAAOC,SAASC,qBAAqB,MAE3C,SAASC,EAAaC,GACdC,IAD4B,EAC5BA,EAAY,GAEKD,EAAAA,EAAAA,GAHW,IAGG,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAA1BE,IAAAA,EAA0B,EAAA,MACnCD,EAAUE,KAAK,CACbC,KAAMF,EAASG,UACfC,SAAUJ,EAASK,QAAQD,SAC3BE,OAAQN,EAASK,QAAQC,OACzBC,IAAKP,EAASK,QAAQE,OARQ,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAY3BR,OAAAA,EAGT,SAASS,EAASV,GAKX,IAJCW,IAAAA,EAAOZ,EAAaC,GAAcW,KAAK,SAACC,EAAGC,GAC/CC,OAAAA,EAAaD,EAAEL,QAAUM,EAAaF,EAAEJ,UAGjCO,EAAI,EAAGA,EAAIf,EAAagB,OAAQD,IACvCf,EAAae,GAAGR,QAAQD,SAAWK,EAAKI,GAAGT,SAC3CN,EAAae,GAAGR,QAAQC,OAASG,EAAKI,GAAGP,OACzCR,EAAae,GAAGR,QAAQE,IAAME,EAAKI,GAAGN,IACtCT,EAAae,GAAGV,UAAYM,EAAKI,GAAGX,KAMxC,SAASU,EAAaG,GACb,OAAEA,EAAOC,MAAM,GAAGC,QAAQ,IAAK,KAHxCT,EAASd","file":"main.5e135f07.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst list = document.getElementsByTagName('li');\n\nfunction getEmployees(listProperty) {\n  const employees = [];\n\n  for (const employee of listProperty) {\n    employees.push({\n      name: employee.innerText,\n      position: employee.dataset.position,\n      salary: employee.dataset.salary,\n      age: employee.dataset.age,\n    });\n  }\n\n  return employees;\n}\n\nfunction sortList(listProperty) {\n  const sort = getEmployees(listProperty).sort((a, b) =>\n    convertToNum(b.salary) - convertToNum(a.salary)\n  );\n\n  for (let i = 0; i < listProperty.length; i++) {\n    listProperty[i].dataset.position = sort[i].position;\n    listProperty[i].dataset.salary = sort[i].salary;\n    listProperty[i].dataset.age = sort[i].age;\n    listProperty[i].innerText = sort[i].name;\n  }\n}\n\nsortList(list);\n\nfunction convertToNum(string) {\n  return +(string.slice(1).replace(',', '.'));\n}\n"]}